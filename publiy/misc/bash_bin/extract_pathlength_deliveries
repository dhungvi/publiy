#!/bin/bash

exit 0;
source common.sh

if [ -z "$1" ]; then
    red "Missing working dir ($0)";
    exit -1; fi
workingdir="$1";


process1() {
    local resultsdir="$1";
    local tempdir="$2";
    local plotsdir="$3";
    blue "Process 1";
    all_ports="";
    all_machines="";
    all_subs="";
    all_pubs="";

    # Process publishers
    for pubprop in $resultsdir/p*.properties; do
        node=`awk 'BEGIN{FS="="} /NodeName/{printf $NF}' $pubprop`;
        machineip=`awk 'BEGIN{FS="\\\\\\\\|:|="} /NodeAddress/ {printf $2}' $pubprop`;
        port=`awk 'BEGIN{FS="\\\\\\\\|:|="} /NodeAddress/ {printf $4}' $pubprop`;

        portstr="$portstr port[$port]=\"$node\";";
        nodestr="$nodestr node[\"$node\"]=\"$machineip\";";

        all_machines="$machine $all_machines";
        all_ports="$port $all_ports";
        all_pubs="$node $all_pubs";
    done

    # Process subscribers
    for subprop in $resultsdir/s*.properties; do
        node=`awk 'BEGIN{FS="="} /NodeName/{printf $NF}' $subprop`;
        machineip=`awk 'BEGIN{FS="\\\\\\\\|:|="} /NodeAddress/ {printf $2}' $subprop`;
        port=`awk 'BEGIN{FS="\\\\\\\\|:|="} /NodeAddress/ {printf $4}' $subprop`;

        portstr="$portstr port[$port]=\"$node\";";
        nodestr="$nodestr node[\"$node\"]=\"$machineip\";";

        all_machines="$machine $all_machines";
        all_ports="$port $all_ports";
        all_subs="$node $all_subs";
    done

    for sub in $all_subs; do
        subresultsfile="$tempdir/BC-$sub*";
        awk "/DELIV/{print gensub(/.*TMulticast_Publication_MP\[ [^ ]* [^ ]* ([^ ]*) .*\] ([[:digit:]]*) [^ ]* Seq.*/,\"\\\\1 \\\\2\",1)}" $subresultsfile | awk "BEGIN{$portstr $nodestr} {print \"$sub\",node[\"$sub\"]\"\t\"port[\$2],node[port[\$2]],\$1}";
    done > $plotsdir/delivery_pathlengths;
}

function process2() {
    local resultsdir="$1";
    local tempdir="$2";
    local plotsdir="$3";
    blue "Process 2";
    
    awk 'BEGIN{l=0;} {
            i=$2","$4;
            if(count[i]==0)
                pair[++l]=i;
            count[i]++;
            pathlengths[i]=pathlengths[i]" "$5;
    } END{
            l=asorti(pathlengths, sorted_indices);
            for(j=1;j<=l;j++){
                i=sorted_indices[j]
                print i"\t"pathlengths[i];
            }
    }' $plotsdir/delivery_pathlengths > $plotsdir/delivery_pathlengths_grouped;
}

function process3() {
    local resultsdir="$1";
    local tempdir="$2";
    local plotsdir="$3";
    blue "Process 3";
    awk '{tot=0;for(i=2;i<=NF;i++)tot+=$i; print $1"\t"tot"\t"(NF-1)"\t"(NF<=1?-1:(tot/(NF-1)))}' $plotsdir/delivery_pathlengths_grouped > $plotsdir/delivery_pathlengths_summary;
}

function process4() {
    local resultsdir="$1";
    local tempdir="$2";
    local plotsdir="$3";
    blue "Process 4";
    awk '{tot_len+=$2; tot_msg+=$3;}END{print tot_len" "tot_msg" "(tot_len/tot_msg)}' $plotsdir/delivery_pathlengths_summary > $plotsdir/delivery_pathlengths_final_summary;
}

if [ ! -d "$1" ]; then
    red "Results dir is not accessible";
    exit -1; fi

resultsdir="$1";
tempdir="$resultsdir/temp";
if [ ! -d "$tempdir" ]; then
    red "No temp dir under results dir";
    exit -1; fi
plotsdir="$resultsdir/plots";
if [ ! -d "$plotsdir" ]; then
    mkdir -p $plotsdir; fi

yellow "`basename $resultsdir`";
    wait_on_stop;
process1 $resultsdir $tempdir $plotsdir;
    wait_on_stop;
process2 $resultsdir $tempdir $plotsdir;
    wait_on_stop;
process3 $resultsdir $tempdir $plotsdir;
    wait_on_stop;
process4 $resultsdir $tempdir $plotsdir;
green "DONE. `wc -l $plotsdir/delivery_pathlengths | awk '{printf $1}'`";

