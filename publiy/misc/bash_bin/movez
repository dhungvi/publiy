#!/bin/bash

if [ -z "$1" ]; then
	red "Working directory is missing!";
	exit -1;
elif [ -z "$2" ]; then
	red "Need destination directory!";
	exit -1;
fi

workingdir="$1";
destdir="$2";
probesdir="$workingdir/probes";

if [ ! -d "$destdir" ]; then
     red "Destination dir \"$destdir\" is not accessible.";
     pink "Stoping at \"$workingdir\"";
     stopthis $workingdir; fi

wait_on_stop $workingdir;

PL_USER="utoronto_jacobsen_ft";
PL_OUTPUTS="/home/$PL_USER/System/outputs";
sshprivatekey="/home/$PL_USER/localrepo/.ssh/pl.id_rsa";
onedeployfile="`ls -d deploy-*.sh | head -1`";
oneremoteip="`awk '/Deploy /{print $NF; exit 0;}' $onedeployfile`";
while :; do
    condense_description=`ssh -i $sshprivatekey $PL_USER@$oneremoteip "grep -a CONDENSE_DESCRIPTION $PL_OUTPUTS/BC-*" | head -1 | awk '{print $2}'`;
    if [ -z "$condense_description" ]; then
        red -en ">";
        sleep 1;
    else
        break;
    fi
done

dataset="`cat $workingdir/.useddataset`";
pdelay="`cat $workingdir/.pdelay`";
sdelay="`cat $workingdir/.sdelay`";
suffix="0";
finaldir="$destdir/DT{$dataset}-DELAY{$pdelay-$sdelay}-TICK`cat $workingdir/.tickscaler`-$condense_description";
delim="__";
while [ -d $finaldir$delim$suffix ]; do
	suffix=`expr $suffix + 1`
done
finaldir="$finaldir$delim$suffix";


# Printing out descriptions
yellow "Using directory $finaldir";
blue "Using condense_description $condense_description";

# Doing the job!
mkdir -p $finaldir 2>/dev/null;

export lastmovez=$finaldir;

plab_all $workingdir TARALL $finaldir;
mv $workingdir/nodes.used $finaldir;
mv $workingdir/*.properties $finaldir;
mv $workingdir/deploy-*.sh $finaldir;
mv $workingdir/.countall $finaldir;
mv $workingdir/.checksubs $finaldir;
mv $workingdir/.useddataset $finaldir;
mv $workingdir/.strategy $finaldir;
mv $workingdir/.usedsjarversion $finaldir;
cp $workingdir/.tickscaler $finaldir;
cp $workingdir/.labtype $finaldir;
cp $workingdir/.inbw $finaldir;
cp $workingdir/.outbw $finaldir;
mv $workingdir/.pdelay $finaldir;
mv $workingdir/.sdelay $finaldir;
mv $probesdir $finaldir;

exit 0;

process $finaldir $destdir/.summaries;

sumup_cols_across_files $finaldir/*.traffic>$finaldir/summedup_traffic;
generate_send_receved_dataset $finaldir/ > $finaldir/send_received_dataset;
avg $finaldir/send_received_dataset | awk '{print $3, $4}' > $finaldir/avg_send_received;

pub_count=`count_publishings $finaldir`;
del_count=`count_deliveries $finaldir`;
yellow "@`date`: `basename $finaldir` => Pub($pub_count), Deliv($del_count)";
echo "@`date`: `basename $finaldir` => Pub($pub_count), Deliv($del_count)" >> $destdir/.summaries;

for window in 1 2 3 5 10; do
	avgwindowfile=$finaldir/summedup_$window"avgwindow_traffic";	
	avg_window $window $finaldir/summedup_traffic>$avgwindowfile;
done

